{
    //"coc.source.omni.filetypes": ["javascript"],
    //"coc.source.omni.triggerCharacters": ["."],
    "coc.preferences.currentFunctionSymbolAutoUpdate": true,
    "coc.preferences.formatOnType": false,
    "coc.preferences.useQuickfixForLocations": true,
    "coc.preferences.enableMarkdown": true,
    "coc.preferences.formatOnSaveFiletypes": [
        "rust"
        //"typescript",
        // "cpp",
    ],
    "coc.preferences.enableLinkedEditing": true,
    "coc.preferences.enableMessageDialog": true,
    "floatFactory.floatConfig": {
        "border": true,
        "rounded": true
    },
    //"tree.closedIcon": "‚ñ∏",
    //"tree.openedIcon": "‚ñæ",
    //
    "inlayHint.enable": false,
    //
    "semanticTokens.combinedModifiers": [
        "deprecated",
        "static",
        "readonly",
        //"defaultLibrary",
    ],
    "semanticTokens.enable": true,
    "suggest.completionItemKindLabels": {
        "keyword": "\uf1de", // Ôáû
        "variable": "\ue79b", // Óûõ
        "value": "\uf89f", // Ô¢ü
        "operator": "\u03a8", // Œ®
        "constructor": "\uf0ad", // ÔÇ≠
        "function": "\u0192", // ∆í
        "reference": "\ufa47", // Ô©á
        "constant": "\uf8fe", // Ô£æ
        "method": "\uf09a", // ÔÇö
        "struct": "\ufb44", // Ô≠Ñ
        "class": "\uf0e8", // ÔÉ®
        "interface": "\uf417", // Ôêó
        "text": "\ue612", // Óòí
        "enum": "\uf435", // Ôêµ
        "enumMember": "\uf02b", // ÔÄ´
        "module": "\uf40d", // Ôêç
        "color": "\ue22b", // Óà´
        "property": "\ue624", // Óò§
        "field": "\uf9be", // Ô¶≥
        "unit": "\uf475", // Ôëµ
        "event": "\ufacd", // Ô´ç
        "file": "\uf723", // Ôú£
        "folder": "\uf114", // ÔÑî
        "snippet": "\ue60b", // Óòã
        "typeParameter": "\uf728", // Ôú®
        //"default": "\uf29c", // Ôäú
        "default": "\u25e6" // ‚ó¶
    },
    //
    "diagnostic.displayByAle": false,
    "diagnostic.errorSign": "‚õî",
    "diagnostic.warningSign": "üö∏",
    "diagnostic.infoSign": "‚ûñ",
    "diagnostic.hintSign": "‚ûï",
    "diagnostic.checkCurrentLine": true,
    "diagnostic.refreshOnInsertMode": true,
    "diagnostic.virtualText": true,
    "diagnostic.virtualTextCurrentLineOnly": false,
    "diagnostic.virtualTextPrefix": "   ‚óÑ ",
    "diagnostic.messageTarget": "echo",
    "diagnostic.separateRelatedInformationAsDiagnostics": true,
    //
    "codeLens.enable": true,
    //"codeLens.position": "right_align",
    //
    "json.schemaDownload.enable": true,
    "json.enableDefaultSchemas": true,
    "json.schemas": [
        // {
        //     "fileMatch": [ "tsconfig.json" ],
        //     "url": "https://json.schemastore.org/tsconfig.json"
        // }
    ],
    "yaml.schemaStore.enable": true,
    "yaml.schemas": {
        "https://json.schemastore.org/clang-format.json": ".clang-format"
    },
    "yaml.format.enable": true,
    //
    //"suggest.noselect": true,
    "suggest.acceptSuggestionOnCommitCharacter": false,
    "suggest.snippetIndicator": " ‚ñ∫ ",
    "suggest.virtualText": true,
    "suggest.noselect": false,
    "suggest.fixInsertedWord": false,
    //
    "list.maxHeight": 30,
    //"list.source.grep.command": "ag",
    //"list.insertMappings": {
        //"<C-c>": "do:exit"
    //},
    //"list.normalMappings": {
        //"<C-c>": "do:exit",
        //"q": "do:exit"
    //},
    //"list.source.mru.maxLength": 30,
    //
    "yank.highlight.duration": 200,
    //
    //"highlight.disableLanguages": ["cpp", "c"],
    "highlight.colors.enable": false,
    //
    "symbol-line.icons": true,
    //
    "tsserver.useLocalTsdk": false,
    "tsserver.implicitProjectConfig.checkJs": true,
    "tsserver.npm": "/bin/npm",
    "tsserver.log": "normal",
    "typescript.referencesCodeLens.enabled": false,
    "typescript.referencesCodeLens.showOnAllFunctions": true,
    "typescript.suggestionActions.enabled": false,
    "eslint.autoFixOnSave": true,
    "eslint.format.enable": true,
    "eslint.useESLintClass": true,
    "eslint.rules.customizations": [
        { "severity": "downgrade", "rule": "*" },
        { "severity": "off", "rule": "prettier/*" }
    ],
    //"eslint.nodePath": ".;../..",
    //"eslint.debug": true,
    //"tsserver.trace.server": "messages",
    //
    //"python.linting.enabled": false,
    "python.linting.flake8Enabled": false,
    "python.jediEnabled": false,
    //
    "jedi.markupKindPreferred": "markdown",
    //
    "java.trace.server": "verbose",
    //
    "git.enableGutters": false,
    //
    "clangd.path": "~/.config/coc/extensions/coc-clangd-data/install/15.0.3/clangd_15.0.3/bin/clangd",
    "clangd.arguments": [
        "--index",
        "--background-index",
        "--clang-tidy",
        "--all-scopes-completion",
        "--suggest-missing-includes",
        "--query-driver=/bin/cc,/bin/c++,/usr/lib/emscripten/em*"
    ],
    "clangd.fallbackFlags": [
        "-std=c++17",
        "-Wall"
    ],
    //
    "sourcekit.commandPath": "/usr/bin/sourcekit-lsp",
    //
    "rust-analyzer.server.path": "/bin/rust-analyzer",
    "rust-analyzer.diagnostics.experimental.enable": true,
    "rust-analyzer.terminal.startinsert": true,
    "rust-analyzer.restartServerOnConfigChange": true,
    "rust-analyzer.procMacro.ignored": {
        "aoc_runner_derive": ["aoc", "aoc_generator"]
    },
    "rust-analyzer.diagnostics.disabled": ["unresolved-import"],
    "[rust]": {
        "inlayHint.enabled": true
    },
    //
    "languageserver": {
        "nimlsp": {
            "command": "nimlsp",
            "args": [
                // "/home/mstearn/.choosenim/toolchains/nim-1.2.0"
            ],
            "filetypes": [
                "nim"
            ]
        },
        "nimlangserver": {
            "command": "nimlangserver",
            "args": [
            ],
            "filetypes": [
                //"nim"
            ],
            "initializationOptions": {
                "projectMapping": [
                    {
                        "fileRegex": ".*\\.nim",
                        "projectPath": "main.nim"
                    },
                    {
                        "fileRegex": "test.nim",
                        "projectPath": "test.nim"
                    }
                ]
            }
        },
        "csharp-ls": {
          "command": "csharp-ls",
          "filetypes": ["cs"],
          "rootPatterns": ["*.csproj", ".vim/", ".git/", ".hg/"]
        },
        "cmake": {
            "command": "cmake-language-server",
            "filetypes": [
                //"cmake"
            ],
            "rootPatterns": [
                "build/"
            ],
            "initializationOptions": {
                "buildDirectory": "build"
            }
        },
        "tern": {
            "command": "/tmp/test/node_modules/js-langserver/index.js",
            "args": ["--stdio"],
            "filetypes": [
                //"javascript"
            ],
            "rootPatterns": [".tern-project"]
        },
        "XXclxxangdxx": {
            "command": "nice",
            "args": [
                "-n19",
                "XXclxxangd",
                "-background-index",
                "-all-scopes-completion"
                // "-completion-style=bundled"
            ],
            "rootPatterns": [
                "compile_flags.txt",
                "compile_commands.json"
                //".vim/",
                //".git/",
                //".hg/"
            ],
            "filetypes": [
                //"c", "cpp", "objc", "objcpp"
            ]
        },
        "ccls": {
            "command": "nice",
            "args": [
                "-n19",
                "ccls",
                "-log-file=/tmp/ccls.log", "-v=1"
            ],
            "filetypes": [
                // "c", "cpp", "objc", "objcpp", "cuda"
            ],
            "rootPatterns": [
                ".ccls",
                "compile_commands.json",
                ".vim/"
                //".git/",
                //".hg/",
            ],
            "initializationOptions": {
                "cache": {
                    "directory": "/home/mstearn/.cache/ccls/",
                    "retainInMemory": 0
                },
                "codeLens": {
                    "localVariables": false
                },
                "completion": {
                    "filterAndSort": true,
                    "maxNum": 100
                },
                "index": {
                    // "threads": 14,
                    "onChange": true,
                    "initialBlacklist": [ "src/third_party"],
                    "initialwhitelist": [ "src/third_party/wiredtiger"]
                },
                "diagnostics": {
                    "onOpen": 0,
                    "onChange": 1,
                    "onSave": 0
                },
                "capabilities": {
                    "documentOnTypeFormattingProvider": {
                        "moreTriggerCharacter": [
                            //";"
                        ]
                    }
                },
                "client": {
                    "diagnosticsRelatedInformation": true
                },
                "request": {
                    "timeout": 1750
                },
                "highlight": {
                    "lsRanges": true
                },
                "clang": {
                    "extraArgs": [
                        "-UNDEBUG",
                        "-Wall",
                        "-Wextra"
                        /*
                        "-Wno-long-long",
                        "-Wno-variadic-macros",
                        "-Wno-unknown-pragmas",
                        "-Wno-unused-parameter",
                        "-Wno-unused-local-typedefs",
                        "-Wno-deprecated-declarations",
                        "-Wno-missing-field-initializers",
                        "-Wno-invalid-pch",
                        "-Wno-potentially-evaluated-expression",
                        "-Wno-inconsistent-missing-override",
                        "-fno-modules",
                        "-Wno-tautological-constant-out-of-range-compare"
                        */
                    ]
                }
            }
        }
    },
    "cSpell.userWords": [
      "BSON",
      "Deref",
      "NOINLINE",
      "NOINST",
      "PRINTFL",
      "Struct",
      "WTOK",
      "clangd",
      "constexpr",
      "coro",
      "cvref",
      "deque",
      "emscripten",
      "fassert",
      "futex",
      "injectables",
      "mongodb",
      "mpark",
      "noreturn",
      "stdx",
      "uassert",
      "unconsume",
      "unindexing",
      "unpositioned"
    ]
}
// vim: set ft=jsonc:
